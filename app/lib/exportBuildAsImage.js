FFBEEquipBuildAsImage = { unitLineHeight: 235, drawTeam: function (a, b) { a.height = FFBEEquipBuildAsImage.unitLineHeight * b.units.length; let c = a.getContext("2d"); c.clearRect(0, 0, a.width, a.height), b.units.forEach((a, b) => FFBEEquipBuildAsImage.drawBuild(c, a, b)), c.fillStyle = "white", c.textAlign = "start", c.textBaseline = "bottom", c.font = "8px Arial" }, drawBuild: function (a, b, c = 0) { var d = Math.min; let e = a.createLinearGradient(0, 0, 900, 235); e.addColorStop(0, "#0000b2"), e.addColorStop(1, "#00002d"), a.fillStyle = e, a.fillRect(4, 4 + c * FFBEEquipBuildAsImage.unitLineHeight, 726, 226), FFBEEquipBuildAsImage.drawImage(a, "https://ffbeEquip.com/img/box.png", 0, 0 + c * FFBEEquipBuildAsImage.unitLineHeight, 730, 235); let f = b.id, g = f.substr(0, f.length - 1) + b.rarity; FFBEEquipBuildAsImage.drawImageCentered(a, `https://ffbeEquip.com/img/units/unit_ills_${g}.png`, 52, 52 + c * FFBEEquipBuildAsImage.unitLineHeight, 1, () => { let e = 105, f = 20 + c * FFBEEquipBuildAsImage.unitLineHeight; a.fillStyle = "white", a.strokeStyle = "white", a.textAlign = "start", a.textBaseline = "bottom", a.font = "italic 12px Arial", a.fillText("HP", e, f + 20), a.fillText("MP", e + 100, f + 20), a.fillText("ATK", e, f + 40), a.fillText("MAG", e + 100, f + 40), a.fillText("DEF", e, f + 60), a.fillText("SPR", e + 100, f + 60), a.font = "bold 18px Arial", a.textAlign = "end"; let g = 0, h = 0;["hp", "mp", "atk", "mag", "def", "spr"].forEach(c => { a.fillText(b.calculatedValues[c].value, e + 80 + 100 * h, f + 21 + 20 * g), b.pots[c] && (a.strokeStyle = "black", a.beginPath(), a.moveTo(e + 85 + 100 * h, f + 18 + 20 * g), a.lineTo(e + 85 + 100 * h, f + 3 + 20 * g), a.stroke(), a.strokeStyle = "#00ff00", a.beginPath(), a.moveTo(e + 85 + 100 * h, f + 18 + 20 * g), a.lineTo(e + 85 + 100 * h, f + 18 + 20 * g - 15 * d(1, b.pots[c] / b.maxPots[c])), a.stroke()), b.pots[c] > b.maxPots[c] && (a.strokeStyle = "black", a.beginPath(), a.moveTo(e + 88 + 100 * h, f + 18 + 20 * g), a.lineTo(e + 88 + 100 * h, f + 3 + 20 * g), a.stroke(), a.strokeStyle = "#00ff00", a.beginPath(), a.moveTo(e + 88 + 100 * h, f + 18 + 20 * g), a.lineTo(e + 88 + 100 * h, f + 18 + 20 * g - 15 * d(1, (b.pots[c] - b.maxPots[c]) / (b.maxPots[c] / 2))), a.stroke()), h++ , 2 === h && (g++ , h = 0) }), b.esperId ? (FFBEEquipBuildAsImage.drawImage(a, `https://ffbeEquip.com/img/espers/${b.esperId}.jpg`, e + 205, f, 50, 50, 1, !0), FFBEEquipBuildAsImage.drawText(a, b.esperId.replace("_", " "), "bold", 12, "center", "middle", e + 230, f + 60, 130)) : (FFBEEquipBuildAsImage.drawImage(a, `https://ffbeEquip.com/img/espers/ALL.png`, e + 205, f, 50, 50), FFBEEquipBuildAsImage.drawText(a, "No esper", "bold", 12, "center", "middle", e + 230, f + 60, 130)), a.textBaseline = "bottom"; let i = [{ name: "Evasion", value: b.calculatedValues.physicalEvasion.value }, { name: "Provoke", value: b.calculatedValues.drawAttacks.value }, { name: "LB Dmg", value: b.calculatedValues.lbDamage.value }, { name: "MP/turn", value: b.calculatedValues.mpRefresh.value * b.calculatedValues.mp.value / 100 }, { name: "LB/turn", value: b.calculatedValues.lbPerTurn.value }, { name: "LB fill", value: b.calculatedValues.lbFillRate.value }, { name: "Jmp Dmg", value: b.calculatedValues.jumpDamage.value }]; e = 25, f = 95 + c * FFBEEquipBuildAsImage.unitLineHeight, g = 0, h = 0, i.forEach(b => { b.value && (a.textAlign = "start", a.fillStyle = "white", a.strokeStyle = "black", a.font = "italic 12px Arial", a.fillText(b.name, e + 100 * h, f + 20 * g + 20), a.font = "bold 14px Arial", a.textAlign = "end", a.fillText(b.value, e + 100 * h + 80, f + 20 * g + 20), h++ , 3 == h && (g++ , h = 0)) }) }); let h = 375, i = 5 + c * FFBEEquipBuildAsImage.unitLineHeight; b.items.forEach((c, d) => { if (c) { let e = Math.floor(c.slot / 2), f = c.slot % 2; FFBEEquipBuildAsImage.drawImage(a, `https://ffbeEquip.com/img/items/${c.icon}`, h + 170 * f, i + 30 * e, 40, 40); let g = "white"; b.itemEnchantments[d] && (g = "#e74c3c"), FFBEEquipBuildAsImage.drawText(a, c.name, "bold", 12, "start", "middle", h + 40 + 170 * f, i + 30 * e + 20, 130, g) } }); let j = "#ff0000", k = "#00ff00"; h = 10, i = 164 + c * FFBEEquipBuildAsImage.unitLineHeight, ["fire", "ice", "lightning", "water", "wind", "earth", "light", "dark"].forEach((c, d) => { let e = h, f = i, g = 1, l = b.calculatedValues.elementResists[c]; l || (g = .4); let m = k; 0 > l && (m = j), FFBEEquipBuildAsImage.drawImage(a, `https://ffbeEquip.com/img/icons/elements/${c}.png`, h + 30 * d, i, 30, 30, g, !1, () => { if (l) { a.font = "bold 14px Arial"; let b = a.measureText(l).width; a.fillStyle = "black", a.globalAlpha = 1, a.fillRect(e + 29 - b + 30 * d, f + 16, b, 12), FFBEEquipBuildAsImage.drawText(a, l, "bold", 12, "end", "bottom", e + 28 + 30 * d, f + 30, 0, m) } }) }), h = 10, i = 196 + c * FFBEEquipBuildAsImage.unitLineHeight, ["poison", "blind", "sleep", "silence", "paralysis", "confuse", "disease", "petrification", "death", "charm", "stop"].forEach((c, e) => { let f = h, g = i, l = 1, m = d(100, b.calculatedValues.ailmentResists[c]); m || (l = .4); let n = k; 0 > m && (n = j), FFBEEquipBuildAsImage.drawImage(a, `https://ffbeEquip.com/img/icons/ailments/${c}.png`, h + 30 * e, i, 30, 30, l, !1, () => { if (m) { a.font = "bold 14px Arial"; let b = a.measureText(m).width; a.fillStyle = "black", a.globalAlpha = 1, a.fillRect(f + 29 - b + 30 * e, g + 16, b, 12), FFBEEquipBuildAsImage.drawText(a, m, "bold", 12, "end", "bottom", f + 28 + 30 * e, g + 30, 0, n) } }) }); let l = ["aquatic", "beast", "bird", "bug", "demon", "dragon", "human", "machine", "plant", "undead", "stone", "spirit"]; h = 355, i = 164 + c * FFBEEquipBuildAsImage.unitLineHeight, l.forEach((c, d) => { let e = h, f = i, g = 1, j = b.calculatedValues.killers[c].physical; j || (g = .4), FFBEEquipBuildAsImage.drawImage(a, `https://ffbeEquip.com/img/icons/killers/physical-${c}.png`, h + 30 * d, i, 30, 30, g, !1, () => { if (j) { a.font = "bold 14px Arial"; let b = a.measureText(j).width; a.fillStyle = "black", a.globalAlpha = .5, a.fillRect(e + 29 - b + 30 * d, f + 16, b, 12), FFBEEquipBuildAsImage.drawText(a, j, "bold", 12, "end", "bottom", e + 28 + 30 * d, f + 30) } }) }), h = 355, i = 196 + c * FFBEEquipBuildAsImage.unitLineHeight, l.forEach((c, d) => { let e = h, f = i, g = 1, j = b.calculatedValues.killers[c].magical; j || (g = .4), FFBEEquipBuildAsImage.drawImage(a, `https://ffbeEquip.com/img/icons/killers/magical-${c}.png`, h + 30 * d, i, 30, 30, g, !1, () => { if (j) { a.font = "bold 14px Arial"; let b = a.measureText(j).width; a.fillStyle = "black", a.globalAlpha = .5, a.fillRect(e + 29 - b + 30 * d, f + 16, b, 12), FFBEEquipBuildAsImage.drawText(a, j, "bold", 12, "end", "bottom", e + 28 + 30 * d, f + 30) } }) }) }, drawImage: function (a, b, c, d, e, f, g = 1, h = !1, i) { let j = new Image; j.onload = () => { a.globalAlpha = g, h && (a.save(), FFBEEquipBuildAsImage.roundedImagePath(a, c, d, e, f), a.clip()), a.drawImage(j, c, d, e, f), h && a.restore(), i && i() }, j.src = b }, drawImageCentered: function (a, b, c, d, e, f) { let g = new Image; g.onload = () => { let b = g.width * e, i = g.height * e; a.globalAlpha = 1, a.drawImage(g, c - b / 2, d - i / 2, b, i), f && f() }, g.src = b }, roundedImagePath: function (a, b, c, d, e) { a.beginPath(), a.moveTo(b + 10, c), a.lineTo(b + d - 10, c), a.quadraticCurveTo(b + d, c, b + d, c + 10), a.lineTo(b + d, c + e - 10), a.quadraticCurveTo(b + d, c + e, b + d - 10, c + e), a.lineTo(b + 10, c + e), a.quadraticCurveTo(b, c + e, b, c + e - 10), a.lineTo(b, c + 10), a.quadraticCurveTo(b, c, b + 10, c), a.closePath() }, drawText: function (a, b, c, d, e, f, g, h, i, j = "white") { let k = d + "px Arial"; c && (k = c + " " + k), a.globalAlpha = 1, a.font = k, a.textBaseline = f, a.textAlign = e, a.fillStyle = j; let l = []; l = i ? FFBEEquipBuildAsImage.getLines(a, b, i) : [b]; let m = 0; "middle" === f && (m = -(l.length - 1) * (d + 2) / 2); for (let k = 0; k < l.length; k++)a.fillText(l[k], g, m + h + k * (d + 2)) }, getLines: function (a, b, c) { for (var d = b.split(" "), e = [], f = d[0], g = 1; g < d.length; g++) { var h = d[g], j = a.measureText(f + " " + h).width; j < c ? f += " " + h : (e.push(f), f = h) } return e.push(f), e } };